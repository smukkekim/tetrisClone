{"version":3,"sources":["components/player.js","components/slot.js","components/board.js","components/piece.js","components/helpers.js","tools/keyboardListener.js","game.js","index.js"],"names":["Player","name","piece","points","Slot","size","isLocked","color","el","document","createElement","style","width","height","classList","add","x","y","left","top","backgroundColor","force","Board","scale","slots","row","push","context","forEach","cell","appendChild","render","clear","matrix","fill","undefined","dir","orgX","orgY","clearPiece","move","isBlocked","setPosition","placePiece","lockPiece","rotate","offset","lock","count","length","some","splice","unshift","pieces","Object","create","T","O","L","J","I","S","Z","Piece","type","deltaX","deltaY","reverse","createPiece","pieceTypes","keys","getRandomPieceType","Math","floor","random","getRandomPiece","LEFT","RIGHT","calculatePoints","rowCount","result","i","KeyboardListener","listeners","active","handlers","keyHandler","handleKey","bind","toggle","key","handler","addListener","triggerKey","Array","isArray","hasHandlerFor","evt","call","state","addEventListener","removeEventListener","prototype","hasOwnProperty","Game","settings","boardWidth","boardHeight","interval","difficultyAdjustment","levelThreshold","board","isRunning","lastTickCount","level","totalClearedRows","dropCounter","dropInterval","scoreBoard","getElementById","scene","nextWindow","nextPieceContainer","nextPiece","prepareNewPiece","player","movementKeyHandler","rotatePiece","directions","movePiece","movePieceDown","dropPiece","gameKeyHandler","togglePause","drawNextDisplay","resetPlayerPiece","toggleGameLoop","draw","ticks","timePassed","requestAnimationFrame","loop","runIt","textContent","clearedRowCount","collectRows","addPoints","updateScoreBoard","levelSkip","handleBottomCollision","game","start"],"mappings":";;AOAA;;;;AHAA,AGEA,IHFMoC,AGEAkH,GHFG,CGEC,EHFEhG,CGEC,IAAIkD,CHFC,CAACjD,MAAP,CAAc,IAAd,AGEC,CHFb,CGEA;ALFA,AIAA,ACIA+F,IAAI,CAACC,KAAL;AHHAnH,GAAG,CAACwC,IAAJ,GAAW,CAAC,CAAZ;AACAxC,AEDA,GFCG,CAACyC,KAAJ,GAAY,CAAZ;;AAEA,AEFA,IFEMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AAClC,MAAIC,MAAM,GAAG,CAAb;ADLF,AGGA,IHHM3B,AHAArD,ACAeI,AIAA8E,MFAT,GAAG5B,MAAM,CAACC,MAAP,CAAc,IAAd,CAAf;ACME,AJLA,ACAA,AIAA,ODKK,IAAI0B,CAAC,GAAGF,CHLD1E,EDAAJ,ECAZ,EDAA,ACAkB,CGKlB,CJLkB,CIKKgF,CAAC,GAAG,CAA3B,ACLgD,EDKlBA,CAAC,EAA/B,EAAmC;AACjCD,ADNJ3B,AHAoB,ACAA,AKGpB,ADHkD,IDM9C2B,EDNE,CAACxB,CAAP,ECMU,CDNC,GCMGyB,CAAC,GAAG,EAAd;AACD,ADND1E,EAAAA,KAAK,EAAE,cADE;AAET0B,AHDE,ACAA,AID8C,EFEhDA,EDDIX,ICCE,AEFM6D,CLCLlF,ACAAK,CECC,CAAC,CAAC,CAAD,AHDP,EGCW,CAAJ,AHDKL,CCAZ,AID8C,CFEhC,CAAP,CAAD,AHDN,ACAgB,EECE,CAAC,CAAD,CFDlB,CECsB,CAAJ,EAAO,CAAP,CAAZ,EAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB,8CEFgB,EAAwB;AHEhD,AEMA,ADRS,AHEP,ACAA,AIF8C,CFAlD,OEA8B0B,CDQrBqD,AJNA9E,ACAAK,KDAL,ACAA,CGMF,ACRgD,EHEpCK,AFAG,ACAA,IDAb,CEAF,EAAmBC,MAAnB,ADAE,ECAyBU,KAA3B,EAAkC,+CGFId,QAAU;AHEd,AEOnC,ADLD4C,AHDI,ACAA,CGAJ,KDCM,CAACI,CAAP,CHDStD,ACAAK,EECE,AFDP,GAAUC,CDAV,GAAc,CAAd,GCAkB,CAACC,aAAT,CAAuB,KAAvB,CAAV;AEEFH,AHDC,ACCC,AIL8C,EFKhDA,KAAK,EAAE,AFAAC,EAAL,CAAQG,KEDD,AFCP,CAAcC,KAAd,aAAyBP,IAAzB;ACFA,ACGF4B,AFAE,EEAFA,MAAM,CDHCrB,ADGAJ,CEAC,CAAC,AFAP,CEAQ,AFAAG,CEAD,CDHP,CCGW,CAAJ,CDHMC,ACGP,AFAN,CAAcC,CEAC,CAAC,CAAD,CDHf,CCGmB,CAAJ,AFAf,CEAM,YFAoBR,IAA1B;ACFA,ACAO,AFGP,AINA,CFGJ,QDASQ,ADGAL,AINAmB,EJML,CAAQb,GCHR,CGHA,EHGcD,CGHCc,EJMf,CAAkBZ,ECHlB,CDGA,CAAsB,AINtB,MJMA;ACFA,ACGJsC,AFAG,AINC,MFME,CAACK,CAAP,CDHSnC,AGHA6D,EFME,GDHP,CGHA,EHGa7D,CGHC,IHGd,CGHA;AHIA,ACGFhB,AENE,EFMFA,KAAK,EDHEiB,ACGA,AENA6D,KHGL,GAAa,ACEN,AELP,EHGA,CGHgB/B,MAAM,CAACC,GLGfpD,GKHQ,CAAc,ILGd,AKHA,CAAhB;AFOF8B,AHHE,AKHA,EFMFA,EGLmBuE,IHKb,CENClB,CFMC,CAAC,AHHFnF,CGGG,CAAD,EAAI,CAAJ,CHHP,CGGc,CAAP,AENP,CFMM,CHHSA,CGGG,AENA,CFMC,CAAD,EAAI,CAAJ,AHHlB,AKHuBoF,EFME,CAAP,CAAZ,EAAuB,CAAC,CAAD,CENX,CFMe,AENAC,CFMJ,EAAO,CAAP,AENX,CFMZ,AENgC,IAApB,CAAlB;AHGA,ACCO,AHAR,AMFD,ADDE,CFGJ,QDDS,AGFAC,IHEIxE,CAAC,CGFV,CAAY,CHEC,CAAb,AIDY,EJCIA,AGFhB,CHEiB,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/B,ACINoC,AGNgB,ADCZ8B,IAAAA,EFKE,CAACxB,CAAP,EDJUlC,CCIC,EDJE,AGDA,CAACG,EHCE,EAAV,GGDF,CAAkB,KJGbZ,GAAGC,GAAG,KIH6B;AFM1CV,AFFE,AIJwC,EFM1CA,KAAK,EAAE,CENgBmF,CJIhBlF,EAAL,AIJwC,CJIhCG,CECD,IFDP,CAAcO,CIJOwE,GJIrB,AIJwC,aJIhB1E,CAAxB;ACFE,ACKJiB,AFFE,AKLA,ADAwC,EFO1CA,MAAM,CGPCwE,CHOC,AEPoBd,CHEnB,ACKA,AFFFnF,CEEG,CAAD,AFFP,CAAQG,CCHGK,ACKA,CDLC,ACKL,CGPP,ADAwC,CFO1B,CDLC,ACKR,AFFP,CCHE,ACKI,AFFQG,AKLE,EJEEH,ACKA,CDLC,ACKA,AFFnB,CEEkB,CEPQ2E,CHEJ/E,ACKA,CAAJ,EAAO,CAAP,CDLhB,ACKI,CEPkC,CHEXI,ACKA,CDLC,ACKA,CAAD,CDL3B,ADGqBC,CEEU,AFFjC,CCHkC,ACKL,EAAO,CAAP,CAAvB;ADJFQ,ACEG,AFCP,AKLEiF,CHIN,KGJMA,EJEEjF,GAAG,ADGFjB,CCHGkB,CDGR,CAAQf,ECHJ,AIFQ,CJEC,CIFC,CLKd,CAAcS,AKNE,CJGChB,aAAJ,CAASmB,ADGtB,GAAgC,ECHnB,CAAT,EDGiChB,KAArC;ACFG,ACKP8C,AFFG,AKLGsD,ADDA,MFQA,AGPAA,ADDA,CFQC/C,CAAP,GAAW,AERD,CAACgC,KCCM,EAAE,EAFC,EDCd,CAAiBF,GAAjB,EAAsBC,OAAtB;AFSJpF,AGPIgB,ADDD,EFQHhB,GEVE,CCGEgB,CHOC,EAAE,EGPE,EAAE,EHMF,AHLIvB,AMJK;AJKd,ACMJiC,AGPI2E,ADDH,EFQD3E,IGPI2E,EHOE,EAAE,CDNCpF,ACMA,CAAC,CAAD,CGPG,CHOC,CDNT,ACMK,AGPK,CJCCE,CCMC,CAAP,AGXS,EJKd,ACMe,CDNCD,ACMX,CAAD,EDNJ,ACMmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,EAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA7B,EAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA3C;ADLL,ACGM,AGJLoF,CHIN,KGJMA,mBLICtG,CKJmB,EAAE,EALR,ELSN;ACFX,ACMH8C,AFHI,AKJEyD,MHOA,AGPAA,CHOCjD,CAAP,GAAW,AFHFtD,KAAL,GAAaA,CKJG,EAAE,ELIlB;AEIFA,AFHC,AKXiB,EHclBA,GGdE,EHcG,EAAE,MADE;AAET0B,AGNE,EHMFA,MAAM,CGNC8E,CHMC,CAAC,CAAC,CAAD,CGNP,CHMW,CAAJ,CGNM,CHMC,CAAP,CAAD,CGNWzF,CHMC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ,CEVIuE,CFUmB,CAAC,CAAD,AGNhB,CACX,CHK+B,CAAJ,EAAO,CAAP,AGLtBY,CHKD,EEVgBd,KCKpB,CAAce,GDLe,OCIlB,EAEX,KAAKD,QAAL,CAAcE,WAFH,EAGX,KAAKF,QAAL,CAAclF,KAHH,CAAb;AHIO,AGEP,ADV+B,CFQnC,QGES4E,KAAL,GAAa;AHEjB9C,AGDM2D,MHCA,AGDAA,CHCClD,CAAP,GAAW,IGDI,EAAE,KADA,ILFTzC,CCJCM,MDIM,GCJG;AACdA,ACQFpB,AFJE,AKGE0G,ADXF,EFYF1G,IDREoB,AIOEsF,CHCC,EAAE,CFJD5F,AIREiD,GHIC,CAAC3D,ACOD,AEXG,CJQD,EIRImF,EHIb,ADIa,AKGE,CJPDlF,ADIA,CKGG,CAFJ,ADTK,CAACmF,EHInB,ADImBzF,KIRN,CAAcuF,EJQ3B,EAA6B,GCJJ,GGJZ,EHIiBjF,EGJWiF,GHIhB,GAAa,IGJzB,CHI8BtE,EGJW,CAACsE,EHIvD,QGJsD,CAAtD;AHKAlE,ACQFM,AFJI,AKGAiF,ADXF5C,EFYFrC,IDREN,AIOEuF,ADXF5C,EFYI,EAAE,AEZF,CFYG,AGDA,ADXF1C,CFYG,CDRD,ACQA,AFJArB,AKGE,CJPDI,AIIK,CHIF,CAAJ,EAAO,AFJZ,AIRF,CHIA,ACQO,AEZM,CHICE,ACQR,CFJS,CEIG,CAAC,CAAD,EDRlB,ACQsB,CAAJ,EAAO,AEZZ6E,CFYK,CAAZ,CEZU,CFYa,CAAC,AFJ5B,AIRkB,CFYS,EAAI,CAAJ,CDRH,CCQU,CAAP,CAAvB,EDRyB7E,MAAL,GAAc,KAAKU,KAA7C;AAEA,ACIO,AFDL,AKGA4F,ADXA,CFSN,KGEMA,KJNG3F,CGLC,CJQClB,GCHP,CAAWsB,CGLD,CAACoE,EJQT,CKGgB,EJNlB,ADGkB,AKGE,CJND,AIEN,ILCX,GIRI,CAAmBN,EHKNjE,CGLb,CAAJ,CHKoB,CGLS;AHKT,ADIrB,AKGC2F,ADXE,MCWFA,IDXE,KHKF3F,CGLM,CCWK,ADXJ4D,CHKJ,CAACzD,AIMS,CALF,KDNT,CHKF,AGLgB8D,CHKJ,EGLV,EAAmBhE,IAAnB,CAAwBiE,CHKd9D,IAAI,EAAI,AGLlB;AHMAF,ADGL,AKGG0F,ADXC,IFYDtD,EGDAsD,GDbA,CHOE1F,KGLK,EHKE,CAACG,AIME,EAAE,KAAK2E,IJNjB,CAAoB5E,GIMR,CJNY,AIME+E,CJNDpG,EAAzB;AACD,ACOL,AGRe,ADJT,KCIJ,IJDE,CADoB,AGFlB,MAAI,CFYEwD,AEZDqB,IFYX,EAAkB,EEZZ,CAAcK,GAAd,IAAqB,CAACC,OAAD,CAArB;AHEkB,ACUN,AGChB,ADZG,OHCH,EIWK2B,UAAL,GAAkB7G,QAAQ,CAAC8G,cAAT,CAAwB,YAAxB,CAAlB;AJND,AIOC,ADZC,OAND,ECkBKC,KAAL,GAAa/G,QAAQ,CAAC8G,CLLjB,aKKQ,CAAwB,WAAxB,CAAb;AHDA,AFHA,AKKA,ADZD,SFUMhH,AGEAkH,ELLAnH,GEGL,KFHA,AKKA,GLLgB,AKKEG,ILLlB,IKK0B,CAAC8G,QHFCvD,IAA5B,EGEkB,CAAwB,aAAxB,CAAlB;AHDA,AFHD,AKMC,SHHK/B,AGGAyF,MHHL,GAAcrE,MAAM,CAACW,EGGrB,EHHoB,CAAN,AGGY,CHHC/B,GGGGX,GHH9B,WGG0B,CAAU,CAAV,EAAa,CAAb,EAAgB,KAAKmF,QAAL,CAAclF,KAA9B,CAA1B;AHFA,AGGA,SHHKP,AGGA2G,CHHL,GAAS,CAAT,IGGA,GAAiB,IAAjB,EJTK;AAAA,ACOL,AGGA,SHHK1G,AGGA2G,CHHL,GAAS,CAAT,UGGA,MDdQ3B,KAAK;AFYd,AGIC,ADhBa,SCgBR4B,CDfCnC,GADO,ECgBb,CDfcO,ECeA,CDhBD,CACPP,ECeY1F,CDhBL,cCgBC,CAAW,UAAX,CAAd;AJXA,AIaA,SAAK8H,EJbAtG,KAAL,CAAWI,OAAX,CAAmB,EIanB,GAA0B,IAAIsD,CJbVzD,GAAD,EAAMR,CAAN,kBIaO,CAAqB,CAC7C;AJdiB,AIefyE,ADlBJ,MCkBIA,GAAG,CDlBH,CCkBK,CAAC,GJdRjE,AGJO4D,GHIJ,CAACzD,EIcG,EAAY,ADlBjB,CAAc8D,EHIhB,AIcO,CJdK,AGJV,CCkBsB,ADlB1B,EAAwB,CCkBf,CADP,KJba7D,IAAD,EAAOb,CAAP,EAAa;AACvBa,AIcA8D,ADlBF,MCkBEA,IJdA9D,GIcO,ADlBJwD,CHIC,CAACtD,AIcI,KAAKgG,CJdd,AGJF,CHIc/G,AGJA0E,CHIC,EGJf,CHIkB,CGJC9D,IHIG,AIcX,CJdYL,AIcKiE,EDlB5B,CAA2B,CCkBhB,CJdT,AIc+B,EJdHvE,CAAC,CIcpB,EJduB,AIcK+G,EDlBZrC,GHIW,CAACpE,GGJL,EHIhC,SIcgDsD,KAAvC;AJbV,AIWD,ADhBkC,KCeW,EAK7C,EJjBA,CADiB,OGFqBc,OAAO,CAACO,IAAR,EAAJ,CFmB1BlF,GAAGC,GAAG;ADjBG,ACkBnB,AGCIyE,ADrBgC,MCqBhCA,CJnBJ,EImBO,ADrBL,EFoBG1E,AGCI,CHDT,AGCU,GHDDA,AGCA,CHDT,CGCe,GAAN,CADP;AJbH,ACcC,AGCI2E,ADrBH,MCqBGA,KHDC1E,CAAL,CGCW,EHDFA,AGCI,CHDb,IGCkB8G,WAAL,CAAiBvC,IAAjB,CAAsB,IAAtB,EAA4BwC,oBAAWnD,KAAvC;AHAd,AGFG,ADlBH,KCagD,EAS7C;AACEa,MAAAA,GAAG,EAAE,CAAC,WAAD,EAAc,GAAd,EAAmB,GAAnB,CADP;AAEEC,MAAAA,OAAO,EAAE,KAAKsC,QJjBZ,CIiBO,CAAezC,IAAf,CAAoB,IAApB,EAA0BwC,oBAAWpD,IAArC;AJhBb,AIcE,KAT6C,EAa7C,IJlBGpD,KAAL,CAAWI,OAAX,CAAmB,ACchBqC,IEpBwB,IFoBhBC,EDdQzC,GAAG,GCcH;ADdG,ACetB,AGIIiE,ADzBuB,MCyBvBA,GAAG,CDzBFS,CFqBAnF,AGII,CHJT,AGIU,GJlBRS,AGPyB,CFqBjBwC,EDdL,CAACrC,GCcN,EGIS,EJlBP,AIkBsB,CJlBV,EIkBL,EAAoB,GAApB,CADP,EJjBYC,IAAI,EAAI,2CGPT,CAAC,KAAKuD,MAAQ;AHQvBvD,ACcJ,AGII8D,ADzBJ,MCyBIA,IJlBA9D,CCcCZ,AErBAmE,CFqBL,CGIW,CJlBH,CAACpD,AIkBI,CHJHkC,CErBV,GHOI,AIkBc+D,ADzBJ9B,EFqBd,GErBA,ICyBa,CAAeX,IAAf,CAAoB,IAApB,EAA0BwC,oBAAWnD,KAArC;AJjBV,ACcJ,AGCG,KAb6C,EAiB7C,EJrBA,CADoB;AAAA,AIsBlBa,ADzBJ,MCyBIA,CJtBJ,EIsBO,CDzBH,CCyBK,CAAC,GDzBDN,MAAT,ECyBS,ADzBQ,ECyBM,GAAd,EAAmB,GAAnB,CAAP;AJjBH,AIiBmCO,ADxBhC,MCwBgCA,OAAO,ADxBlChE,ECwBoC,KAAKuG,ADxB9C,CAAa9B,YCwB4B,CAAmBZ,GDxB5D,CCwByC,ADxBX,CCwBmC,IAAxB,IDxBzC,EAAyC,KAAKF,UAA9C;ACwBA,ADvBD,KCM8C,EAkB7C,AD1BF,MAEO,cFoBFlD,KAAK;AAAA,AGINsD,ADvBF,MCuBEA,GAAG,CHHDzD,CGGG,EDvBFN,CCuBL,EHJQ,GACO,CEpBf,CAAa0E,EFmBL,CACJpE,MADI,UEnBR,CAAiC,SAAjC,EAA4C,KAAKqD,UAAjD;ACuBYK,ADtBb,MCsBaA,OAAO,EAAE,KAAKwC,SAAL,CAAe3C,CJhB7BtF,GIgBc,CAAoB,GJhB3B,CIgBO;AJhBP,ACchB,AGEE,ADrBH,KCGgD,CAArB,CAA1B,IHgBK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,MAAM,CAACgB,MAA3B,EAAmC,EAAEhC,CAArC,EAAwC;AACtC,AGGF,SAAKmH,IHHE,IAAIpH,CAAC,GAAG,CAAb,CGGF,CHHkBA,CAAC,CGGG,EHHAC,CAApB,CGGwBiE,CHHD,EAAElE,CAAzB,EAA4B,mBGGR,CAAqB,CACzC;AJlBFd,ACc8B,AGI1BwF,MJlBJxF,AIkBIwF,GAAG,EJlBF,AIkBI,CJlBHzD,MAAN,CAAaL,AIkBX,EHHiC,CAACK,IDfpC,CAAqB,CCeqB,CAAChB,CAAD,CAAN,CAAUD,CAAV,CAAD,EAAeiB,CDf5BR,GAAD,EAAMR,ACe6B,CDfnC,ACeoCD,CAAD,CAAN,CAAUC,CAAV,CAAf,CADL;ADdT,ACehBgB,AGGc0D,MAAAA,IHHd1D,GGGqB,EJjBxBR,AIiB0B,CHHjB,CAACT,CDdP,ACcM,CDdLY,ACcD,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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["class Player {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.piece = null;\r\n    this.points = 0;\r\n  }\r\n\r\n  addPoints(points) {\r\n    this.points += points;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","export default class Slot {\r\n  constructor(size) {\r\n    this.isLocked = false;\r\n    this.color = 'transparent';\r\n    this.el = document.createElement('div');\r\n\r\n    this.el.style.width = `${size}px`;\r\n    this.el.style.height = `${size}px`;\r\n    this.el.classList.add('slot');\r\n  }\r\n\r\n  render(x, y) {\r\n    this.el.style.left = `${x}px`;\r\n    this.el.style.top = `${y}px`;\r\n    this.el.style.backgroundColor = this.color;\r\n  }\r\n\r\n  fill(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  clear(force) {\r\n    if (force || !this.isLocked) {\r\n      this.color = 'transparent';\r\n      this.isLocked = false;\r\n    }\r\n  }\r\n\r\n  lock() {\r\n    this.isLocked = true;\r\n  }\r\n}\r\n","import Slot from './slot.js';\r\n\r\nclass Board {\r\n  constructor(width, height, scale) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.scale = scale;\r\n    this.slots = [];\r\n    for (let y = 0; y < height; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < width; x++) {\r\n        row.push(new Slot(scale));\r\n      }\r\n      this.slots.push(row);\r\n    }\r\n  }\r\n\r\n  render(context) {\r\n    context.style.width = `${this.width * this.scale}px`;\r\n    context.style.height = `${this.height * this.scale}px`;\r\n\r\n    this.slots.forEach(row =>\r\n      row.forEach(cell => {\r\n        context.appendChild(cell.el);\r\n      })\r\n    );\r\n  }\r\n\r\n  draw() {\r\n    this.slots.forEach((row, y) =>\r\n      row.forEach((cell, x) => {\r\n        cell.render(x * this.scale, y * this.scale);\r\n      })\r\n    );\r\n  }\r\n\r\n  clear() {\r\n    this.slots.forEach(row =>\r\n      row.forEach(cell => {\r\n        cell.clear();\r\n      })\r\n    );\r\n  }\r\n\r\n  placePiece(piece) {\r\n    piece.matrix.forEach((row, y) =>\r\n      row.forEach((cell, x) => {\r\n        if (cell === 1) {\r\n          this.slots[piece.y + y][piece.x + x].fill(piece.color);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  clearPiece(piece) {\r\n    piece.matrix.forEach((row, y) =>\r\n      row.forEach((cell, x) => {\r\n        if (\r\n          this.slots[piece.y + y] !== undefined &&\r\n          this.slots[piece.y + y][piece.x + x] !== undefined\r\n        ) {\r\n          this.slots[piece.y + y][piece.x + x].clear();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  movePiece(piece, dir) {\r\n    const [orgX, orgY] = [piece.x, piece.y];\r\n    this.clearPiece(piece);\r\n    piece.move(dir, 0);\r\n    if (this.isBlocked(piece)) {\r\n      piece.setPosition(orgX, orgY);\r\n    }\r\n    this.placePiece(piece);\r\n  }\r\n\r\n  movePieceDown(piece) {\r\n    this.clearPiece(piece);\r\n    piece.move(0, 1);\r\n    if (this.isBlocked(piece)) {\r\n      piece.move(0, -1);\r\n      this.lockPiece(piece);\r\n      return true;\r\n    }\r\n    this.placePiece(piece);\r\n    return false;\r\n  }\r\n\r\n  dropPiece(piece) {\r\n    this.clearPiece(piece);\r\n    while (!this.isBlocked(piece)) {\r\n      piece.move(0, 1);\r\n    }\r\n    piece.move(0, -1);\r\n    this.lockPiece(piece);\r\n  }\r\n\r\n  rotatePiece(piece, dir) {\r\n    const [orgX, orgY] = [piece.x, piece.y];\r\n    this.clearPiece(piece);\r\n    piece.rotate(dir);\r\n\r\n    let offset = 1;\r\n    while (this.isBlocked(piece)) {\r\n      piece.move(offset, orgY);\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > piece.width) {\r\n        piece.rotate(-dir);\r\n        piece.setPosition(orgX, orgY);\r\n        this.placePiece(piece);\r\n        return;\r\n      }\r\n    }\r\n    this.placePiece(piece);\r\n  }\r\n\r\n  lockPiece(piece) {\r\n    piece.matrix.forEach((row, y) =>\r\n      row.forEach((cell, x) => {\r\n        if (cell === 1) {\r\n          this.slots[piece.y + y][piece.x + x].fill('var(--color-frozen)');\r\n          this.slots[piece.y + y][piece.x + x].lock();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  isBlocked(piece) {\r\n    for (let y = 0; y < piece.height; y++) {\r\n      for (let x = 0; x < piece.width; x++) {\r\n        if (piece.matrix[y][x] === 1) {\r\n          if (\r\n            piece.x + x < 0 ||\r\n            piece.x + x >= this.width ||\r\n            piece.y + y >= this.height\r\n          ) {\r\n            return true;\r\n          }\r\n          if (\r\n            this.slots[piece.y + y] &&\r\n            this.slots[piece.y + y][piece.x + x] &&\r\n            this.slots[piece.y + y][piece.x + x].isLocked\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  collectRows() {\r\n    let count = 0;\r\n    for (let y = this.slots.length - 1; y > 0; y--) {\r\n      // for (let x = 0; x < this.slots[y].length; x++) {\r\n      //   if (!this.slots[y][x].isLocked) {\r\n      //     continue outer;\r\n      //   }\r\n      // }\r\n      if (!this.slots[y].some(cell => !cell.isLocked)) {\r\n        let row = this.slots.splice(y, 1)[0];\r\n        row.forEach(cell => {\r\n          cell.clear(true);\r\n        });\r\n        this.slots.unshift(row);\r\n        count++;\r\n        y++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","const pieces = Object.create(null);\r\npieces.T = {\r\n  color: 'mediumpurple',\r\n  matrix: [[0, 1, 0], [1, 1, 1], [0, 0, 0]],\r\n};\r\npieces.O = {\r\n  color: 'yellow',\r\n  matrix: [[1, 1], [1, 1]],\r\n};\r\npieces.L = {\r\n  color: 'orange',\r\n  matrix: [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\r\n};\r\npieces.J = {\r\n  color: 'blue',\r\n  matrix: [[0, 1, 0], [0, 1, 0], [1, 1, 0]],\r\n};\r\npieces.I = {\r\n  color: 'cyan',\r\n  matrix: [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]],\r\n};\r\npieces.S = {\r\n  color: 'lime',\r\n  matrix: [[0, 1, 1], [1, 1, 0], [0, 0, 0]],\r\n};\r\npieces.Z = {\r\n  color: 'red',\r\n  matrix: [[1, 1, 0], [0, 1, 1], [0, 0, 0]],\r\n};\r\n\r\nclass Piece {\r\n  constructor(type) {\r\n    this.color = `var(--color-${type})`;\r\n    this.matrix = pieces[type].matrix;\r\n    this.x = 0;\r\n    this.y = 0;\r\n  }\r\n\r\n  get height() {\r\n    return this.matrix.length;\r\n  }\r\n\r\n  get width() {\r\n    return this.matrix[0].length;\r\n  }\r\n\r\n  setPosition(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  move(deltaX, deltaY) {\r\n    this.x += deltaX;\r\n    this.y += deltaY;\r\n  }\r\n\r\n  rotate(dir) {\r\n    let { matrix } = this;\r\n    for (let y = 0; y < matrix.length; ++y) {\r\n      for (let x = 0; x < y; ++x) {\r\n        [matrix[x][y], matrix[y][x]] = [matrix[y][x], matrix[x][y]];\r\n      }\r\n    }\r\n\r\n    if (dir > 0) {\r\n      matrix.forEach(row => row.reverse());\r\n    } else {\r\n      matrix.reverse();\r\n    }\r\n  }\r\n}\r\n\r\nconst createPiece = type => new Piece(type);\r\n\r\nconst pieceTypes = Object.keys(pieces);\r\n\r\nconst getRandomPieceType = () =>\r\n  pieceTypes[Math.floor(Math.random() * pieceTypes.length)];\r\n\r\nconst getRandomPiece = () => createPiece(getRandomPieceType());\r\n\r\nexport { pieces, createPiece, getRandomPiece };\r\n","const dir = Object.create(null);\r\ndir.LEFT = -1;\r\ndir.RIGHT = 1;\r\n\r\nconst calculatePoints = rowCount => {\r\n  let result = 0;\r\n  for (let i = rowCount; i > 0; i--) {\r\n    result += i * 10;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport { dir as directions, calculatePoints };\r\n","export default class KeyboardListener {\r\n  constructor(listeners = [], context = document) {\r\n    this.context = context;\r\n    this.active = false;\r\n    this.handlers = Object.create(null);\r\n    this.keyHandler = this.handleKey.bind(this);\r\n    this.toggle(true);\r\n\r\n    listeners.forEach(({ key, handler }) => {\r\n      this.addListener(key, handler);\r\n    });\r\n  }\r\n\r\n  addListener(triggerKey, handler) {\r\n    const keys = Array.isArray(triggerKey) ? triggerKey : [triggerKey];\r\n    keys.forEach(key => {\r\n      if (this.hasHandlerFor(key)) {\r\n        this.handlers[key].push(handler);\r\n      } else {\r\n        this.handlers[key] = [handler];\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKey(evt) {\r\n    let { key } = evt;\r\n    if (this.handlers[key]) {\r\n      this.handlers[key].forEach(handler => handler.call());\r\n    }\r\n  }\r\n\r\n  toggle(state = !this.active) {\r\n    this.active = state;\r\n\r\n    if (this.active) {\r\n      this.context.addEventListener('keydown', this.keyHandler);\r\n    } else {\r\n      this.context.removeEventListener('keydown', this.keyHandler);\r\n    }\r\n  }\r\n\r\n  hasHandlerFor(key) {\r\n    return Object.prototype.hasOwnProperty.call(this.handlers, key);\r\n  }\r\n}\r\n","import Player from './components/player.js';\r\nimport Board from './components/board.js';\r\nimport { getRandomPiece } from './components/piece.js';\r\nimport { directions, calculatePoints } from './components/helpers.js';\r\nimport KeyboardListener from './tools/keyboardListener.js';\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.settings = {\r\n      boardWidth: 10,\r\n      boardHeight: 20,\r\n      scale: 40,\r\n      interval: 750,\r\n      difficultyAdjustment: 10,\r\n      levelThreshold: 1,\r\n    };\r\n\r\n    this.board = new Board(\r\n      this.settings.boardWidth,\r\n      this.settings.boardHeight,\r\n      this.settings.scale\r\n    );\r\n\r\n    this.state = {\r\n      isRunning: false,\r\n      lastTickCount: 0,\r\n      level: 1,\r\n      totalClearedRows: 0,\r\n      dropCounter: 0,\r\n      dropInterval: this.settings.interval,\r\n    };\r\n\r\n    this.scoreBoard = document.getElementById('ScoreBoard');\r\n    this.scene = document.getElementById('GameBoard');\r\n    this.nextWindow = document.getElementById('NextDisplay');\r\n\r\n    this.nextPieceContainer = new Board(5, 5, this.settings.scale);\r\n    this.nextPiece = null;\r\n    this.prepareNewPiece();\r\n\r\n    this.player = new Player('Player 1');\r\n\r\n    this.movementKeyHandler = new KeyboardListener([\r\n      {\r\n        key: ['ArrowUp', 'e', 'E'],\r\n        handler: this.rotatePiece.bind(this, directions.RIGHT),\r\n      },\r\n      {\r\n        key: ['q', 'Q'],\r\n        handler: this.rotatePiece.bind(this, directions.RIGHT),\r\n      },\r\n      {\r\n        key: ['ArrowLeft', 'a', 'A'],\r\n        handler: this.movePiece.bind(this, directions.LEFT),\r\n      },\r\n      {\r\n        key: ['ArrowRight', 'd', 'D'],\r\n        handler: this.movePiece.bind(this, directions.RIGHT),\r\n      },\r\n      { key: ['ArrowDown', 's', 'S'], handler: this.movePieceDown.bind(this) },\r\n      { key: ' ', handler: this.dropPiece.bind(this) },\r\n    ]);\r\n    this.gameKeyHandler = new KeyboardListener([\r\n      { key: 'Escape', handler: this.togglePause.bind(this) },\r\n    ]);\r\n  }\r\n\r\n  start() {\r\n    this.board.render(this.scene);\r\n    this.drawNextDisplay();\r\n    this.resetPlayerPiece();\r\n    this.toggleGameLoop(true);\r\n  }\r\n\r\n  togglePause() {\r\n    this.toggleGameLoop();\r\n    this.scene.classList.toggle('paused', !this.state.isRunning);\r\n  }\r\n\r\n  prepareNewPiece() {\r\n    this.nextPiece = getRandomPiece();\r\n    this.nextPiece.setPosition(\r\n      Math.floor((5 - this.nextPiece.width) / 2),\r\n      Math.floor((5 - this.nextPiece.height) / 2)\r\n    );\r\n    this.nextPieceContainer.clear();\r\n    this.nextPieceContainer.placePiece(this.nextPiece);\r\n    this.nextPieceContainer.draw();\r\n  }\r\n\r\n  loop(ticks = 0) {\r\n    if (!this.state.isRunning) return false;\r\n\r\n    let timePassed = ticks - this.state.lastTickCount;\r\n    this.state.lastTickCount = ticks;\r\n    this.state.dropCounter += timePassed;\r\n    if (this.state.dropCounter > this.state.dropInterval) {\r\n      this.movePieceDown();\r\n      this.state.dropCounter = 0;\r\n    }\r\n    this.board.draw();\r\n    requestAnimationFrame(this.loop.bind(this));\r\n  }\r\n\r\n  toggleGameLoop(runIt = !this.state.isRunning) {\r\n    this.state.isRunning = runIt;\r\n    if (this.state.isRunning) {\r\n      this.loop();\r\n      this.movementKeyHandler.toggle(true);\r\n    } else {\r\n      this.movementKeyHandler.toggle(false);\r\n    }\r\n  }\r\n\r\n  updateScoreBoard(points) {\r\n    this.scoreBoard.textContent = points;\r\n  }\r\n\r\n  resetPlayerPiece() {\r\n    this.player.piece = this.nextPiece;\r\n    this.prepareNewPiece();\r\n    this.player.piece.setPosition(\r\n      Math.floor((this.settings.boardWidth - this.player.piece.width) / 2),\r\n      0\r\n    );\r\n    this.board.placePiece(this.player.piece);\r\n    if (this.board.isBlocked(this.player.piece)) {\r\n      this.toggleGameLoop(false);\r\n    }\r\n    this.board.draw();\r\n  }\r\n\r\n  handleBottomCollision() {\r\n    const clearedRowCount = this.board.collectRows();\r\n    if (clearedRowCount > 0) {\r\n      this.state.totalClearedRows += clearedRowCount;\r\n      this.player.addPoints(calculatePoints(clearedRowCount));\r\n      this.updateScoreBoard(this.player.points);\r\n      const levelSkip = Math.floor(\r\n        clearedRowCount / this.settings.levelThreshold\r\n      );\r\n      if (levelSkip > 0) {\r\n        this.state.level += levelSkip;\r\n        this.state.dropInterval -=\r\n          this.settings.difficultyAdjustment * levelSkip;\r\n      }\r\n    }\r\n    this.resetPlayerPiece();\r\n  }\r\n\r\n  rotatePiece(dir) {\r\n    this.board.rotatePiece(this.player.piece, dir);\r\n  }\r\n\r\n  movePiece(dir) {\r\n    this.board.movePiece(this.player.piece, dir);\r\n  }\r\n\r\n  movePieceDown() {\r\n    if (this.board.movePieceDown(this.player.piece)) {\r\n      this.handleBottomCollision();\r\n    }\r\n  }\r\n\r\n  dropPiece() {\r\n    this.board.dropPiece(this.player.piece);\r\n    this.handleBottomCollision();\r\n  }\r\n\r\n  drawNextDisplay() {\r\n    this.nextWindow.style.width = `${5 * this.settings.scale}px`;\r\n    this.nextWindow.style.height = `${5 * this.settings.scale}px`;\r\n\r\n    this.nextPieceContainer.render(this.nextWindow);\r\n    this.nextPieceContainer.draw();\r\n  }\r\n}\r\n","import Game from './game.js';\r\n\r\nconst game = new Game();\r\n\r\ngame.start();\r\n"]}